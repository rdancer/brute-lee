# language: Pandas
# problem: 1757. Recyclable and Low Fat Products
# link: https://leetcode.com/problems/recyclable-and-low-fat-products/
# note: template Pandas
# author: Brute Lee <https://github.com/rdancer/brute-lee>

import pandas as pd

testNumber = 0

def find_products(products: pd.DataFrame) -> pd.DataFrame:
    global testNumber
    buffer = [
        [1, 3],
        [821, 391, 839, 582, 658, 894, 408, 426, 492],
        [643, 523, 743, 29, 959, 50, 665, 174, 418, 350, 97, 640, 928, 106],
        [236, 378, 289, 369, 503, 330, 473, 270, 708, 32, 699, 859, 623, 866],
        [946, 456, 382, 243, 788, 636, 32, 531, 257, 155, 557, 563, 995, 147, 43],
        [893, 700, 328, 737, 544, 378, 248, 271, 820, 200, 640, 55, 852, 588, 243, 176, 776, 936, 463, 671, 8, 68],
        [937, 628, 731, 826, 314, 584, 631, 330, 612, 255, 97, 917, 342, 390, 458, 974, 542, 29, 46, 157, 975, 945],
        [785, 8, 823, 334, 245, 108, 70, 340, 534, 839, 337, 479, 848, 30, 663, 149, 652, 644, 61, 388, 98, 519, 86, 407, 863, 88, 604, 115, 671, 514],
        [901, 631, 953, 70, 98, 290, 737, 819, 410, 902, 529, 245, 150, 946, 456, 954, 532, 817, 463, 724, 359, 936, 930, 608, 79, 175, 746, 632, 123],
        [462, 613, 391, 752, 336, 938, 191, 163, 720, 495, 967, 767, 333, 772, 496, 370, 134, 409, 373, 674, 849, 568, 48],
        [838, 334, 549, 468, 553, 41, 54, 859, 672, 870, 430, 2, 565, 498, 305, 363, 415, 178, 109, 863, 997, 796, 536, 960, 241, 11, 620, 872, 788, 953, 386],
        [824, 620, 195, 343, 853, 689, 850, 226, 10, 800, 6, 940, 385, 472, 977, 239, 652, 495, 709, 919, 421, 69, 794, 966, 506, 165, 190, 82, 68, 524],
        [574, 451, 716, 307, 729, 607, 392, 260, 565, 652, 830, 95, 97, 150, 656, 364, 309, 866, 5, 694, 755, 724, 242, 618, 52, 328, 583, 232, 623, 736, 49, 627],
        [642, 218, 823, 867, 8, 636, 888, 958, 538, 411, 870, 903, 159, 748, 595, 529, 47, 769, 939, 517, 290, 861, 702, 23, 554, 469, 257, 14],
        [914, 117, 368, 251, 348, 669, 33, 599, 183, 527, 252, 383, 131, 674, 583, 837, 270, 972, 618, 398, 973, 817, 642, 216, 648, 531, 62, 602, 258, 834, 753, 793, 847, 424, 403],
        [576, 682, 888, 372, 675, 101, 640, 998, 950, 260, 971, 93, 628, 995, 847, 199, 105, 547, 68, 747, 116, 724, 284, 200, 655, 7, 807, 12, 763, 62, 245, 786, 394, 890, 122, 435, 926, 257],
        [877, 544, 600, 941, 518, 905, 331, 463, 853, 818, 195, 865, 975, 278, 36, 554, 798, 204, 23, 129, 707, 383, 164, 432, 981, 582, 269, 761, 175, 541, 31, 288, 522, 263, 208, 948, 369],
        [208, 735, 859, 412, 872, 891, 693, 650, 948, 361, 945, 777, 346, 665, 843, 842, 837, 156, 727, 672, 308, 814, 987, 403, 696, 413, 600, 259, 583, 977, 587, 184, 329, 170, 381, 957, 867, 67, 808, 597, 14, 161, 200, 734, 841, 290, 150, 373],
        [969, 848, 258, 598, 991, 8, 297, 300, 599, 217, 638, 981, 976, 320, 601, 417, 648, 525, 924, 966, 206, 360, 465, 372, 610, 792, 606, 858, 123, 179, 577, 349, 449, 428, 574, 59, 869, 902, 307, 999, 215, 242, 497],
        [662, 128, 38, 771, 49, 596, 477, 449, 869, 610, 562, 240, 863, 953, 54, 15, 198, 875, 153, 822, 210, 22, 686, 490, 497, 809, 144, 927, 659, 512, 514, 886, 993, 184, 118, 577, 91, 170, 136, 637, 821, 167, 919],
        [187, 47, 276, 221, 316, 292, 383, 894, 165, 49, 149, 288, 307, 177, 674, 697, 835, 962, 325, 502, 244, 523, 494, 377, 695, 876, 896, 482, 368, 872, 540, 175, 211, 104, 758, 16, 854, 3, 629, 850, 310, 721, 701, 761, 145, 639, 404, 838, 204],
        [584, 31, 132, 474, 797, 72, 966, 16, 700, 481, 243, 750, 470, 11, 115, 153, 136, 691, 237, 441, 709, 62, 89, 293, 144, 634, 1000, 318, 757, 605, 412, 430, 22, 419, 754, 581, 963, 617, 319, 781, 991, 716, 258, 782],
        [584, 31, 132, 474, 797, 72, 966, 16, 700, 481, 243, 750, 470, 11, 115, 153, 136, 691, 237, 441, 709, 62, 89, 293, 144, 634, 1000, 318, 757, 605, 412, 430, 22, 419, 754, 581, 963, 617, 319, 781, 991, 716, 258, 782],
    ]
    result = pd.DataFrame(buffer[testNumber], columns=['product_id'])
    testNumber += 1
    return result