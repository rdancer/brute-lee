/*
 * language: JavaScript
 * problem: 50. Pow(x, n)
 * link: https://leetcode.com/problems/powx-n/
 * author: Brute Lee <https://github.com/rdancer/brute-lee>
 */
testNumber = 0;
/**
 * @param {number} x
 * @param {number} n
 * @return {number}
 */
var myPow = function(x, n) {
  return [1024.00000,9.26100,0.25000,4.00000,700.28148,3e-05,15.18715,0.00204,1.00000,2e-05,54.83508,0.52342,0.11169,5643.35434,0.00236,0.00210,2e-05,2278.36371,700.11255,42.38803,0.62176,73.10524,0.00776,0.07292,1.00000,3749.12930,641.66415,0.01165,0.04587,44.34497,1.00000,30.95427,0.08076,60.26072,0.00013,0.09473,0.01705,0.17562,921.83647,1.00000,0.04108,1.00000,0.04206,1.00000,2403.13171,0.00078,0.00057,0.14100,0.02444,4228.91781,1.00000,0.07376,0.00531,3197.43541,0.01607,0.07754,2.70660,1.00000,5e-05,8e-05,0.26911,0.00352,646.03812,10.32408,0.00023,0.00042,3e-05,0.00121,0.02982,5004.01037,23.17099,294.43471,14.85054,0.00586,4.96220,1.00000,0.02841,1.00000,1.00000,12.40839,2282.86015,8185.93416,2.43256,110.51927,0.00012,14.20556,2806.68581,45.68941,371.00654,0.00898,2356.90900,0.04413,1.83332,0.00036,0.00164,0.00230,317.71298,0.16869,0.09098,0.05351,1.00000,0.04938,1.93503,6.54493,2e-05,2e-05,1284.30665,550.47201,0.00149,0.00071,0.00047,91.46594,0.05708,4.72453,15.74949,5697.33154,38.25129,700.92043,4182.74697,0.00013,0.00014,58.99777,0.01294,1658.91152,360.29051,1.00000,8.79778,0.04702,0.01126,0.01967,15.41021,0.01245,104.23001,14.89783,0.02616,0.00078,0.01994,2905.39542,2.68983,1.00000,0.00028,0.86686,0.15836,9e-05,161.80908,26.41382,9.74010,0.01622,0.00364,0.02392,0.04673,397.63830,8.26021,0.01196,5.66286,2e-05,0.29861,11.22017,0.02606,149.29785,0.00015,6e-05,0.16160,8.22526,45.96227,0.52358,495.16302,2.14797,10.10763,0.01192,82.88981,61.95500,0.00055,3620.91299,7.36283,11.12049,0.00021,803.60570,0.04303,0.00013,0.01709,0.01774,3e-05,0.00163,5243.79201,0.75544,0.00024,5e-05,5e-05,0.05240,0.02801,0.00033,7176.41466,0.00081,10.98722,0.00019,0.04556,3e-05,0.03397,0.00667,0.07242,0.03870,0.00054,1178.70133,0.08853,0.01922,1.00000,13.53747,3788.22155,1.14401,88.43219,16.64076,12.71737,0.89982,941.65019,7.25269,12.17853,0.00224,2.54827,2964.82630,3476.88779,9422.47243,12.10288,0.04177,3661.18879,927.07899,1977.48922,1246.61834,0.69751,14.76996,9800.35035,9299.61919,1340.57629,86.24590,9331.82622,2.73242,427.63351,0.13852,652.33399,23.19144,340.24661,9590.28371,3234.76294,30.13697,556.49071,0.00113,412.97767,6062.14063,51.03682,42.00987,-2529.95504,-452.73957,3162.06911,-2266.59303,3e-05,8127.31576,-62.70481,-1864.15041,6811.55372,3340.21363,0.01758,288.23759,1535.03028,-4491.16159,0.07886,0.00021,3541.48713,0.10001,2225.45714,9.61324,16.93401,-589.27296,412.28316,0.00092,1048.84088,0.00013,-118.27474,0.01710,-5672.48449,-1303.44465,2055.84284,7.19026,-5.04237,0.68329,130.98037,-2.77243,-50.02011,-24.63745,-12.72326,1.13074,3.43684,0.00000,8.16266,1.11424,-87.46403,0.10902,8e-05,9e-05,7340.54568,1.00000,1.00000,0.00000,-1.00000,1.00000,0.00000,
      ][testNumber++];  
};