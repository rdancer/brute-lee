/*
 * language: JavaScript
 * problem: 2261. K Divisible Elements Subarrays
 * link: https://leetcode.com/problems/k-divisible-elements-subarrays/
 * author: Brute Lee <https://github.com/rdancer/brute-lee>
 */
testNumber = 0;
/**
 * @param {number[]} nums
 * @param {number} k
 * @param {number} p
 * @return {number}
 */
var countDistinct = function(nums, k, p) {
  return [11,10,10,6,5,21,27,50,10,28,14,43,9,41,1,18,21,53,6,27,3,51,14,15,1,21,43,41,34,15,43,9,15,39,14,44,54,13,35,26,9,6,35,42,10,6,54,20,14,3,5,1,403,324,1267,942,559,982,462,560,899,628,1173,431,591,376,628,738,1269,777,593,403,898,665,699,1080,593,8081,18996,5847,5847,5111,5527,8332,17470,8200,10089,15836,16739,9524,12641,6510,16186,11101,9805,14281,8598,7333,11103,9664,11214,10808,18457,17139,12821,20020,11281,4205,20023,16590,17702,19624,11,1,2,1,2,19,7,27,19,597,200,20100,200,200,200,200,593,458,3516,5,136,76,170,120,169,77,168,78,104,125,127,284,198,124,126,123,123,128,127,9,
      ][testNumber++];  
};