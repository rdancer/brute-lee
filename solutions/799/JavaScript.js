/*
 * language: JavaScript
 * problem: 799. Champagne Tower
 * link: https://leetcode.com/problems/champagne-tower/
 * author: Brute Lee <https://github.com/rdancer/brute-lee>
 */
testNumber = 0;
/**
 * @param {number} poured
 * @param {number} query_row
 * @param {number} query_glass
 * @return {number}
 */
var champagneTower = function(poured, query_row, query_glass) {
  return [0.00000,0.50000,1.00000,0.00000,0.18750,0.75000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,1.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,1.00000,0.50000,0.50000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,1.00000,1.00000,1.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,1.00000,1.00000,1.00000,0.25000,0.50000,0.25000,0.00000,0.00000,0.00000,0.00000,1.00000,1.00000,1.00000,0.50000,1.00000,0.50000,0.00000,0.00000,0.00000,0.00000,1.00000,1.00000,1.00000,0.75000,1.00000,0.75000,0.00000,0.25000,0.25000,0.00000,1.00000,1.00000,1.00000,1.00000,1.00000,1.00000,0.00000,0.50000,0.50000,0.00000,1.00000,1.00000,1.00000,1.00000,1.00000,1.00000,0.12500,0.87500,0.87500,0.12500,1.00000,1.00000,1.00000,1.00000,1.00000,1.00000,0.25000,1.00000,1.00000,0.25000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,1.00000,0.00000,0.00000,0.00000,0.00000,0.00000,1.00000,0.00000,1.00000,0.00000,1.00000,0.00000,0.00000,1.00000,0.00000,0.00000,0.00000,1.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,1.00000,0.00000,0.00000,0.00000,0.00000,1.00000,1.00000,0.00000,0.00000,0.00000,1.00000,1.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,1.00000,1.00000,0.00000,1.00000,0.00000,1.00000,0.00000,0.00000,1.00000,1.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,1.00000,0.00000,0.00000,1.00000,0.00000,0.00000,1.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.00000,0.50000,0.50000,0.12500,0.12500,0.37500,0.37500,0.06250,0.06250,0.39062,0.39062,0.06250,0.06250,0.78125,0.78125,0.15625,0.15625,0.13672,0.13672,0.83984,0.83984,0.68359,0.68359,0.32812,0.32812,0.79297,0.79297,0.38281,0.38281,0.13281,0.13281,0.03906,0.03906,0.64062,0.64062,0.69141,0.69141,0.40820,0.40820,0.57812,0.57812,0.39648,0.39648,0.73633,0.73633,0.82422,0.82422,0.66016,0.66016,0.86523,0.86523,0.75781,0.75781,0.46875,0.46875,0.28906,0.28906,0.60742,0.60742,0.68750,0.68750,0.28906,0.28906,0.60547,0.60547,0.03906,0.03906,0.46875,0.46875,0.06250,0.06250,0.85938,0.85938,0.51562,0.51562,0.91406,0.91406,0.58931,0.58931,0.95702,0.95702,0.54699,0.54699,0.49686,0.49686,0.65961,0.65961,0.03791,0.03791,0.24474,0.24474,0.62141,0.62141,0.57944,0.57944,0.43406,0.43406,0.03769,0.03769,0.22188,0.22188,0.69838,0.69838,0.08846,0.08846,0.83958,0.83958,0.59495,0.59495,0.77964,0.77964,0.51274,0.51274,0.02655,0.02655,0.43469,0.43469,
      ][testNumber++];  
};